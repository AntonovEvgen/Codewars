// ‚ùìDESCRIPTION 
// –í —ç—Ç–æ–π –∏–≥—Ä–µ –≥–µ—Ä–æ–π –¥–≤–∏–≥–∞–µ—Ç—Å—è —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ. –ò–≥—Ä–æ–∫ –±—Ä–æ—Å–∞–µ—Ç –∫—É–±–∏–∫ –∏ 
// –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç, —É–∫–∞–∑–∞–Ω–Ω–æ–µ –Ω–∞ –∫—É–±–∏–∫–µ, –¥–≤–∞ —Ä–∞–∑–∞.

// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –∏–≥—Ä—ã, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 
// —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –≥–µ—Ä–æ—è –∏ –±—Ä–æ—Å–æ–∫ (1-6) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é.

//üí•TEST
    // Test.assertEquals(move(0, 4), 8);
    // Test.assertEquals(move(3, 6), 15);
    // Test.assertEquals(move(2, 5), 12);

// ‚úÖSOLUTION
function move (position, roll) {
    return position + roll * 2;
}

console.log(move(3, 4));

